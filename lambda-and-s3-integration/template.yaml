AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for sam-s3input-sample

Parameters:
  BucketName:
    Type: String
    Default: "sam-s3input-sample-v123456789"
    Description: Enter Read bucket name Default is t2.micro!?


Globals:
  Function:
    Timeout: 3
    MemorySize: 128 # package typeがimageの場合必須ぽい？

Resources:
  # S3
  S3InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  # Lambda
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
#      CodeUri: hello_world/
#      Handler: app.lambda_handler
#      Runtime: python3.9
      Architectures:
        - x86_64
#      Layers:
#        - !Ref MyLayer
      Events: #SAMでは既存のバケットは参照できない仕様。lambdaのリソースベースポリシーに設定される。
        S3UploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref S3InputBucket
            Events: s3:ObjectCreated:*
#ロールを自動で作成するために、└─$ sam deploy --guided --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND　で実行する
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./hello_world
      DockerTag: python3.9-v1
  #Layerの作成
  MyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: 'mylayer/'
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
Outputs:
  S3InputBucketArn:
    Description: "Hello World S3 ARN"
    Value: !GetAtt S3InputBucket.Arn
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn


#To do  SNS topic連携